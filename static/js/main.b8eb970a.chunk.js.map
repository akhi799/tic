{"version":3,"sources":["Icon.js","App.js","index.js"],"names":["Icon","choice","className","tictacarray","Array","fill","App","useState","isCross","setIsCross","winMessage","setWinMessage","changeItem","index","toast","type","Container","position","Row","Col","md","onClick","console","log","map","value","Card","CardBody","ReactDOM","render","document","getElementById"],"mappings":"qLAgBeA,EAZH,SAAC,GACT,OADoB,EAAVC,QAEN,IAAK,QACD,OAAO,cAAC,IAAD,CAASC,UAAU,SAC9B,IAAK,SACD,OAAO,cAAC,IAAD,CAAaA,UAAU,SAClC,QACI,MAAO,K,uDCFbC,G,YAAY,IAAIC,MAAM,GAAGC,KAAK,KAoFrBC,EAlFL,WAEV,MAAyBC,oBAAS,GAAlC,mBAAKC,EAAL,KAAaC,EAAb,KACA,EAA+BF,mBAAS,IAAxC,mBAAKG,EAAL,KAAgBC,EAAhB,KA4BMC,EAAW,SAACC,GACd,OAAGH,EACQI,YAAM,iBAAiB,CAACC,KAAK,YAEjB,IAApBZ,EAAYU,GAIJC,YAAM,iBAAiB,CAACC,KAAK,WAHpCZ,EAAYU,GAAOL,EAAQ,QAAQ,SACnCC,GAAYD,SAzBbL,EAAY,IAAIA,EAAY,IAAIA,EAAY,IAAIA,EAAY,IAAoB,IAAhBA,EAAY,IAEtEA,EAAY,IAAIA,EAAY,IAAIA,EAAY,IAAIA,EAAY,IAAoB,IAAhBA,EAAY,IAE5EA,EAAY,IAAIA,EAAY,IAAIA,EAAY,IAAIA,EAAY,IAAoB,IAAhBA,EAAY,IAE5EA,EAAY,IAAIA,EAAY,IAAIA,EAAY,IAAIA,EAAY,IAAoB,IAAhBA,EAAY,IAE5EA,EAAY,IAAIA,EAAY,IAAIA,EAAY,IAAIA,EAAY,IAAoB,IAAhBA,EAAY,IAE5EA,EAAY,IAAIA,EAAY,IAAIA,EAAY,IAAIA,EAAY,IAAoB,IAAhBA,EAAY,IAE5EA,EAAY,IAAIA,EAAY,IAAIA,EAAY,IAAIA,EAAY,IAAoB,IAAhBA,EAAY,IAE5EA,EAAY,IAAIA,EAAY,IAAIA,EAAY,IAAIA,EAAY,IAAoB,IAAhBA,EAAY,KAbjFQ,EAAcR,EAAY,GAAG,UA+BjC,OAEQ,eAACa,EAAA,EAAD,CAAWd,UAAU,MAArB,UACI,cAAC,IAAD,CAAgBe,SAAS,kBACzB,cAACC,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CAAKC,GAAI,EAAGlB,UAAU,cAAtB,UAEAQ,EACI,gCACA,oBAAIR,UAAU,cAAd,SAA6BQ,IAC7B,wBAAQW,QAlDhB,WACZZ,GAAW,GACXE,EAAc,IACdR,EAAYE,KAAK,IACjBiB,QAAQC,IAAI,UA8CQ,2BAKA,8BACI,6BACKf,EAAQ,eAAe,kBAMhC,qBAAKN,UAAU,OAAf,SACKC,EAAYqB,KAAI,SAACC,EAAMZ,GAAP,OACb,cAACa,EAAA,EAAD,CAAML,QAAS,kBAAIT,EAAWC,IAA9B,SACI,cAACc,EAAA,EAAD,CAAUzB,UAAU,MAApB,SACI,cAAC,EAAD,CAAMD,OAAQE,EAAYU,uBC5ElEe,IAASC,OAAO,cAAC,EAAD,IAAOC,SAASC,eAAe,W","file":"static/js/main.b8eb970a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { FaTimes,FaRegCircle,FaPen } from 'react-icons/fa';\r\n\r\n\r\nconst Icon =({choice})=>{\r\n    switch(choice){\r\n        case \"cross\":\r\n            return <FaTimes className=\"icon\"/>;\r\n        case \"circle\":\r\n            return <FaRegCircle className=\"icon\" />;\r\n        default :\r\n            return \"\";\r\n            \r\n    }\r\n    \r\n}\r\nexport default Icon","import React,{useState} from \"react\"\r\nimport Icon from \"./Icon\"\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Button,Container,Card,CardBody,Row,Col } from 'reactstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"./style.css\"\r\n\r\nconst tictacarray=new Array(9).fill(\"\")\r\n\r\nconst App=()=>{\r\n\r\nlet [isCross,setIsCross]=useState(true)\r\nlet [winMessage,setWinMessage]=useState(\"\")\r\nconst playAgain=()=>{\r\n    setIsCross(true)\r\n    setWinMessage(\"\")\r\n    tictacarray.fill(\"\")\r\n    console.log(\"hello\")\r\n}\r\n\r\nconst findWinner=()=>{\r\n    if(tictacarray[0]==tictacarray[1]&&tictacarray[0]==tictacarray[2]&&tictacarray[0]!=\"\"){\r\n        setWinMessage(tictacarray[0]+\"won\")\r\n    }else if(tictacarray[3]==tictacarray[4]&&tictacarray[3]==tictacarray[5]&&tictacarray[3]!=\"\"){\r\n        setWinMessage(tictacarray[0]+\"won\")\r\n    }else if(tictacarray[6]==tictacarray[7]&&tictacarray[7]==tictacarray[8]&&tictacarray[7]!=\"\"){\r\n        setWinMessage(tictacarray[0]+\"won\")\r\n    }else if(tictacarray[0]==tictacarray[3]&&tictacarray[3]==tictacarray[6]&&tictacarray[6]!=\"\"){\r\n        setWinMessage(tictacarray[0]+\"won\")\r\n    }else if(tictacarray[1]==tictacarray[4]&&tictacarray[7]==tictacarray[4]&&tictacarray[7]!=\"\"){\r\n        setWinMessage(tictacarray[0]+\"won\")\r\n    }else if(tictacarray[2]==tictacarray[5]&&tictacarray[5]==tictacarray[8]&&tictacarray[8]!=\"\"){\r\n        setWinMessage(tictacarray[0]+\"won\")\r\n    }else if(tictacarray[0]==tictacarray[4]&&tictacarray[4]==tictacarray[8]&&tictacarray[8]!=\"\"){\r\n        setWinMessage(tictacarray[0]+\"won\")\r\n    }else if(tictacarray[2]==tictacarray[4]&&tictacarray[4]==tictacarray[6]&&tictacarray[6]!=\"\"){\r\n        setWinMessage(tictacarray[0]+\"won\")\r\n    }\r\n}\r\n\r\nconst changeItem=(index)=>{\r\n    if(winMessage){\r\n        return toast(\"game over dude\",{type:\"success\"})\r\n    }\r\n    if(tictacarray[index]==\"\"){\r\n        tictacarray[index]=isCross?\"cross\":\"circle\"\r\n        setIsCross(!isCross)\r\n    }else{\r\n        return toast(\"game over dude\",{type:\"error\"})\r\n        \r\n    }findWinner()\r\n}\r\n\r\n    return(\r\n                               \r\n            <Container className=\"p-5\">\r\n                <ToastContainer position=\"button-center\" ></ToastContainer>\r\n                <Row>\r\n                    <Col md={6} className=\"offset-md-3\">\r\n                    {\r\n                    winMessage?(\r\n                        <div>\r\n                        <h1 className=\"text-center\">{winMessage}</h1>\r\n                        <button onClick={playAgain}>\r\n                        Play Again\r\n                        </button>\r\n                        </div>\r\n                    ):(\r\n                        <div>\r\n                            <h1>\r\n                                {isCross?\"cross's turn\":\"circle turn\"}\r\n                            </h1>\r\n                        </div>\r\n                    )\r\n\r\n                    }\r\n                        <div className=\"grid\">\r\n                            {tictacarray.map((value,index)=>(\r\n                                <Card onClick={()=>changeItem(index)}>\r\n                                    <CardBody className=\"box\">\r\n                                        <Icon choice={tictacarray[index]}/>\r\n                                    </CardBody>\r\n                                </Card>\r\n                            ))}\r\n                            </div>            \r\n                    </Col>\r\n                </Row>\r\n                </Container>\r\n        \r\n    )\r\n}\r\nexport default App","import React from \"react\"\r\nimport  ReactDOM  from \"react-dom\"\r\nimport App from \"./App\"\r\n\r\n\r\n\r\nReactDOM.render(<App/>,document.getElementById(\"root\"))"],"sourceRoot":""}